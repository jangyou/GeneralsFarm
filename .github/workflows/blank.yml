name: CI/CD  # 워크플로우의 이름을 지정합니다.

on:
  push:  # 코드가 푸시될 때
    branches: [ "main" ]  # "main" 브랜치로 제한합니다.
  pull_request:  # 풀 리퀘스트가 올라왔을 때
    branches: [ "main" ]  # "main" 브랜치로 제한합니다.
  workflow_dispatch:  # 액션 탭에서 수동으로 실행할 수 있도록 합니다.

jobs:
  deploy:
    runs-on: ubuntu-latest  # 우분투 최신 버전에서 작업을 실행합니다.

    steps:
      - name: Checkout repository  # 레포지토리를 체크아웃합니다.
        uses: actions/checkout@v2  # GitHub Action을 사용하여 레포지토리를 체크아웃합니다.

      - name: Use Node.js  # Node.js 사용 설정
        uses: actions/setup-node@v4  # Node.js를 설정합니다.
        with:
          node-version: '10.19'  # Node.js 버전을 10.19로 지정합니다.

      - name: Install dependencies  # 의존성 설치
        run: npm ci  # package-lock.json에 명시된 의존성을 설치합니다.

      - name: Build  # 빌드
        run: npm run build --if-present  # 빌드 스크립트를 실행합니다. (--if-present 플래그를 사용하여 해당 스크립트가 있는 경우에만 실행합니다.)

      - name: Deploy to server  # 서버로 배포
        uses: easingthemes/ssh-deploy@v2  # SSH를 통해 배포하기 위한 액션을 사용합니다.
        with:
          server: ${{ secrets.SERVER_ADDRESS }}  # 운영 서버의 주소를 Secrets에서 가져옵니다.
          username: ${{ secrets.SERVER_USERNAME }}  # 서버의 사용자 이름을 Secrets에서 가져옵니다.
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}  # 서버의 비밀번호를 ssh key 로 가져옵니다.
          local: './build'  # 빌드된 파일의 경로를 지정합니다.
          remote: '/var/www/html'  # 서버의 배포 디렉토리 경로를 지정합니다.
